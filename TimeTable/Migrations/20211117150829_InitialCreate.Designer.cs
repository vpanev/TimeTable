// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimeTable;

namespace TimeTable.Migrations
{
    [DbContext(typeof(TimeTableContext))]
    [Migration("20211117150829_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TimeTable.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EMPLOYEE_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmployeeEgn")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("EMPLOYEE_EGN");

                    b.Property<DateTime?>("EmployeeHiredate")
                        .HasColumnType("date")
                        .HasColumnName("EMPLOYEE_HIREDATE");

                    b.Property<string>("EmployeeLastname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EMPLOYEE_LASTNAME");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EMPLOYEE_NAME");

                    b.Property<string>("EmployeePosition")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EMPLOYEE_POSITION");

                    b.Property<string>("EmployeeSurname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EMPLOYEE_SURNAME");

                    b.HasKey("EmployeeId");

                    b.HasIndex(new[] { "EmployeeEgn" }, "IDX_EMPLOYEE_UQ")
                        .IsUnique();

                    b.ToTable("EMPLOYEES");
                });

            modelBuilder.Entity("TimeTable.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PROJECT_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ProjectBegin")
                        .HasColumnType("date")
                        .HasColumnName("PROJECT_BEGIN");

                    b.Property<string>("ProjectDescription")
                        .HasMaxLength(400)
                        .IsUnicode(false)
                        .HasColumnType("varchar(400)")
                        .HasColumnName("PROJECT_DESCRIPTION");

                    b.Property<DateTime>("ProjectEnd")
                        .HasColumnType("date")
                        .HasColumnName("PROJECT_END");

                    b.Property<int?>("ProjectMaxhours")
                        .HasColumnType("int")
                        .HasColumnName("PROJECT_MAXHOURS");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PROJECT_NAME");

                    b.Property<string>("ProjectStatus")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("PROJECT_STATUS")
                        .IsFixedLength(true);

                    b.HasKey("ProjectId");

                    b.HasIndex(new[] { "ProjectName" }, "IDX_PROJECT_UQ")
                        .IsUnique();

                    b.ToTable("PROJECT");
                });

            modelBuilder.Entity("TimeTable.ProjectHour", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("PROJECT_ID");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EMPLOYEE_ID");

                    b.Property<DateTime>("ProjectTaskdate")
                        .HasColumnType("date")
                        .HasColumnName("PROJECT_TASKDATE");

                    b.Property<int>("ProjectHours")
                        .HasColumnType("int")
                        .HasColumnName("PROJECT_HOURS");

                    b.Property<int?>("ProjectMonthId")
                        .HasColumnType("int")
                        .HasColumnName("PROJECT_MONTH_ID");

                    b.Property<string>("ProjectTask")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PROJECT_TASK");

                    b.HasKey("ProjectId", "EmployeeId", "ProjectTaskdate");

                    b.ToTable("PROJECT_HOURS");
                });

            modelBuilder.Entity("TimeTable.ProjectMonth", b =>
                {
                    b.Property<int>("ProjectMonthId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PROJECT_MONTH_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("PROJECT_ID");

                    b.Property<int>("ProjectMonth1")
                        .HasColumnType("int")
                        .HasColumnName("PROJECT_MONTH");

                    b.Property<string>("ProjectMonthStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("PROJECT_MONTH_STATUS")
                        .HasDefaultValueSql("('O')")
                        .IsFixedLength(true);

                    b.Property<int>("ProjectYear")
                        .HasColumnType("int")
                        .HasColumnName("PROJECT_YEAR");

                    b.HasKey("ProjectMonthId");

                    b.HasIndex(new[] { "ProjectId", "ProjectYear", "ProjectMonth1" }, "IDX_PROJECT_MONTHS_UQ")
                        .IsUnique();

                    b.ToTable("PROJECT_MONTHS");
                });

            modelBuilder.Entity("TimeTable.ProjectMonth", b =>
                {
                    b.HasOne("TimeTable.Project", "Project")
                        .WithMany("ProjectMonths")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_PROJECT__REFERENCE_PROJECT")
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("TimeTable.Project", b =>
                {
                    b.Navigation("ProjectMonths");
                });
#pragma warning restore 612, 618
        }
    }
}
